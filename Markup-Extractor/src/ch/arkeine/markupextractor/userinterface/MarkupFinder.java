/*
 * Copyright 2015 Nils Ryter.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ch.arkeine.markupextractor.userinterface;

import ch.arkeine.markupextractor.tool.MarkupTool;
import java.awt.Component;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Nils Ryter
 */
public class MarkupFinder extends javax.swing.JDialog {

    //OUTPUT
    private String[] markups;

    /**
     * Creates new form MarkupFinder
     */
    public MarkupFinder() {
        initComponents();
        renameTab();
        enableRemoveButton();
        markups = new String[2];
        markups[0] = "";
        markups[1] = "";
    }

    private void renameTab() {
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                "ch/arkeine/markupextractor/internationalization"); // NOI18N

        for (int i = 0; i < tabData.getTabCount(); i++) {
            tabData.setTitleAt(i, bundle.getString(
                    "MarkupFinder.dataSelector.TabConstraints.tabTitle")
                    + " " + (i + 1));
        }
    }

    private void enableRemoveButton() {
        btRemoveData.setEnabled(tabData.getTabCount() > 1);
    }

    public String[] getMarkups() {
        return markups;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        split = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        tabData = new javax.swing.JTabbedPane();
        dataSelector1 = new ch.arkeine.markupextractor.userinterface.DataSelector();
        jPanel1 = new javax.swing.JPanel();
        panInput = new javax.swing.JPanel();
        btNewData = new javax.swing.JButton();
        btRemoveData = new javax.swing.JButton();
        panOutput = new javax.swing.JPanel();
        btFindMarkup = new javax.swing.JButton();
        titleBeginMarkup = new javax.swing.JLabel();
        titleEndMarkup = new javax.swing.JLabel();
        btShowData = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBeginMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEndMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        titleMaxMarkupLength = new javax.swing.JLabel();
        spMaxMarkupLength = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ch/arkeine/markupextractor/internationalization"); // NOI18N
        setTitle(bundle.getString("MarkupFinder.title")); // NOI18N
        setModal(true);

        split.setDividerLocation(500);
        split.setResizeWeight(0.8);

        tabData.addTab(bundle.getString("MarkupFinder.dataSelector1.TabConstraints.tabTitle"), dataSelector1); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabData, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabData, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addContainerGap())
        );

        split.setLeftComponent(jPanel2);

        panInput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panInput.border.title"))); // NOI18N

        btNewData.setText(bundle.getString("MarkupFinder.btNewData.text")); // NOI18N
        btNewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewDataActionPerformed(evt);
            }
        });

        btRemoveData.setText(bundle.getString("MarkupFinder.btRemoveData.text")); // NOI18N
        btRemoveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panInputLayout = new javax.swing.GroupLayout(panInput);
        panInput.setLayout(panInputLayout);
        panInputLayout.setHorizontalGroup(
            panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btNewData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btRemoveData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panInputLayout.setVerticalGroup(
            panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNewData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRemoveData)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panOutput.border.title"))); // NOI18N

        btFindMarkup.setText(bundle.getString("MarkupFinder.btFindMarkup.text")); // NOI18N
        btFindMarkup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindMarkupActionPerformed(evt);
            }
        });

        titleBeginMarkup.setText(bundle.getString("MarkupFinder.titleBeginMarkup.text")); // NOI18N

        titleEndMarkup.setText(bundle.getString("MarkupFinder.titleEndMarkup.text")); // NOI18N

        btShowData.setText(bundle.getString("MarkupFinder.btShowData.text")); // NOI18N
        btShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btShowDataActionPerformed(evt);
            }
        });

        txtBeginMarkup.setColumns(20);
        txtBeginMarkup.setRows(5);
        txtBeginMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.txtBeginMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane3.setViewportView(txtBeginMarkup);

        txtEndMarkup.setColumns(20);
        txtEndMarkup.setRows(5);
        txtEndMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.txtEndMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane1.setViewportView(txtEndMarkup);

        titleMaxMarkupLength.setText(bundle.getString("MarkupFinder.titleMaxMarkupLength.text")); // NOI18N

        spMaxMarkupLength.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(15), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout panOutputLayout = new javax.swing.GroupLayout(panOutput);
        panOutput.setLayout(panOutputLayout);
        panOutputLayout.setHorizontalGroup(
            panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btShowData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFindMarkup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panOutputLayout.createSequentialGroup()
                        .addGroup(panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleEndMarkup)
                            .addComponent(titleBeginMarkup)
                            .addComponent(titleMaxMarkupLength))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(spMaxMarkupLength))
                .addContainerGap())
        );
        panOutputLayout.setVerticalGroup(
            panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleMaxMarkupLength)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spMaxMarkupLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleBeginMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleEndMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btFindMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btShowData)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(panOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        split.setRightComponent(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewDataActionPerformed
        tabData.add(new DataSelector());
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_btNewDataActionPerformed

    private void btRemoveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveDataActionPerformed
        if (tabData.getTabCount() > 1) {
            tabData.remove(tabData.getSelectedIndex());
        }
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_btRemoveDataActionPerformed

    private void btFindMarkupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindMarkupActionPerformed

        //Create array of page content
        List<String> lstDoc = new LinkedList();
        List<String> lstKey = new LinkedList();
        List<Integer> lstNbOccurence = new LinkedList();
        DataSelector base = (DataSelector) tabData.getComponentAt(0);
        boolean isDataOk = true;

        for (Component c : tabData.getComponents()) {
            DataSelector d = (DataSelector) c;
            lstDoc.add(d.getContent());
            lstKey.add(d.getOccurenceText());
            lstNbOccurence.add(d.getOccurenceNumber());
            if (d.getOccurenceText().isEmpty()) {
                isDataOk = false;
            }
        }

        if (isDataOk) {
            String[] arrDoc = new String[lstDoc.size()];
            arrDoc = lstDoc.toArray(arrDoc);
            String[] arrKey = new String[lstKey.size()];
            arrKey = lstKey.toArray(arrKey);
            Integer[] arrOccu = new Integer[lstNbOccurence.size()];
            arrOccu = lstNbOccurence.toArray(arrOccu);

            //Search the best markup
            int maxLen = (int) spMaxMarkupLength.getValue();
            String[] m = MarkupTool.searchMarkup(arrDoc, arrKey, arrOccu);
            txtBeginMarkup.setText(m[0].substring(
                    Math.max(m[0].length() - maxLen, 0), m[0].length()));
            txtEndMarkup.setText(m[1].substring(0, Math.min(maxLen,
                    m[1].length())));
        }
    }//GEN-LAST:event_btFindMarkupActionPerformed

    private void btShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btShowDataActionPerformed
        String begin = txtBeginMarkup.getText();
        String end = txtEndMarkup.getText();
        StringBuilder result = new StringBuilder();

        for (Component c : tabData.getComponents()) {
            DataSelector d = (DataSelector) c;
            String s = d.getContent();
            result.append(s.substring(
                    Math.min(Math.max(s.indexOf(begin) + begin.length(), 0),
                            s.length()), Math.max(s.indexOf(end), 0)));
            result.append("\n");
        }

        if (!result.toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, result.toString());
        }
    }//GEN-LAST:event_btShowDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkupFinder.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkupFinder.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkupFinder.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkupFinder.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkupFinder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFindMarkup;
    private javax.swing.JButton btNewData;
    private javax.swing.JButton btRemoveData;
    private javax.swing.JButton btShowData;
    private ch.arkeine.markupextractor.userinterface.DataSelector dataSelector1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panInput;
    private javax.swing.JPanel panOutput;
    private javax.swing.JSpinner spMaxMarkupLength;
    private javax.swing.JSplitPane split;
    private javax.swing.JTabbedPane tabData;
    private javax.swing.JLabel titleBeginMarkup;
    private javax.swing.JLabel titleEndMarkup;
    private javax.swing.JLabel titleMaxMarkupLength;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtBeginMarkup;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtEndMarkup;
    // End of variables declaration//GEN-END:variables
}
