/*
 * Copyright 2015 Nils Ryter.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ch.arkeine.markupextractor.userinterface.wizard;

import ch.arkeine.markupextractor.extractor.Command;
import ch.arkeine.markupextractor.extractor.Extractor;
import ch.arkeine.markupextractor.tool.MarkupToolException;
import ch.arkeine.markupextractor.tool.ToolMarkups;
import ch.arkeine.markupextractor.tool.ToolMessages;
import ch.arkeine.markupextractor.userinterface.DisplayDataExtracted;
import ch.arkeine.markupextractor.userinterface.ExtractionMenu;
import ch.arkeine.markupextractor.userinterface.ScriptEditorMenu;
import ch.arkeine.markupextractor.userinterface.SummaryMenu;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nils Ryter
 */
public class MarkupFinder extends javax.swing.JDialog {

    //OUTPUT
    private boolean isOk;

    /**
     * Creates new form MarkupFinder
     */
    public MarkupFinder(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        renameTab();
        enableRemoveButton();
        isOk = false;
    }

    private void renameTab() {
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                "ch/arkeine/markupextractor/internationalization"); // NOI18N

        for (int i = 0; i < tabData.getTabCount(); i++) {
            tabData.setTitleAt(i, bundle.getString(
                    "MarkupFinder.dataSelector.TabConstraints.tabTitle")
                    + " " + (i + 1));
        }
    }

    private void enableRemoveButton() {
        btRemoveData.setEnabled(tabData.getTabCount() > 1);
    }

    public String[] getMarkups() {
        String[] markups = new String[2];
        markups[0] = txtBeginMarkup.getText();
        markups[1] = txtEndMarkup.getText();
        return markups;
    }

    public boolean isOk() {
        return isOk;
    }

    private Object[][] getDataAsArray() {
        String[] docs = new String[tabData.getTabCount()];
        String[] keys = new String[tabData.getTabCount()];
        Integer[] num = new Integer[tabData.getTabCount()];

        int i = 0;
        for (Component c : tabData.getComponents()) {
            DataSelector d = (DataSelector) c;
            docs[i] = d.getContent();
            keys[i] = d.getOccurenceText();
            num[i] = d.getOccurenceNumber();
            if (d.getOccurenceText().isEmpty()) {
                return null;
            }
            i++;
        }
        
        Object[][] o = new Object[3][tabData.getTabCount()];
        o[0] = docs;
        o[1] = keys;
        o[2] = num;
        return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        split = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        tabData = new javax.swing.JTabbedPane();
        dataSelector1 = new ch.arkeine.markupextractor.userinterface.wizard.DataSelector();
        jPanel1 = new javax.swing.JPanel();
        panInput = new javax.swing.JPanel();
        btNewData = new javax.swing.JButton();
        btRemoveData = new javax.swing.JButton();
        panOutput = new javax.swing.JPanel();
        btFindMarkup = new javax.swing.JButton();
        titleBeginMarkup = new javax.swing.JLabel();
        titleEndMarkup = new javax.swing.JLabel();
        btShowData = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBeginMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEndMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        btAddToScript = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ch/arkeine/markupextractor/internationalization"); // NOI18N
        setTitle(bundle.getString("MarkupFinder.title")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        split.setDividerLocation(500);
        split.setResizeWeight(0.8);

        tabData.addTab(bundle.getString("MarkupFinder.dataSelector1.TabConstraints.tabTitle"), dataSelector1); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabData, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabData, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        split.setLeftComponent(jPanel2);

        panInput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panInput.border.title"))); // NOI18N

        btNewData.setText(bundle.getString("MarkupFinder.btNewData.text")); // NOI18N
        btNewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewDataActionPerformed(evt);
            }
        });

        btRemoveData.setText(bundle.getString("MarkupFinder.btRemoveData.text")); // NOI18N
        btRemoveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panInputLayout = new javax.swing.GroupLayout(panInput);
        panInput.setLayout(panInputLayout);
        panInputLayout.setHorizontalGroup(
            panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btNewData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btRemoveData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panInputLayout.setVerticalGroup(
            panInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNewData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRemoveData)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panOutput.border.title"))); // NOI18N

        btFindMarkup.setText(bundle.getString("MarkupFinder.btFindMarkup.text")); // NOI18N
        btFindMarkup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindMarkupActionPerformed(evt);
            }
        });

        titleBeginMarkup.setText(bundle.getString("MarkupFinder.titleBeginMarkup.text")); // NOI18N

        titleEndMarkup.setText(bundle.getString("MarkupFinder.titleEndMarkup.text")); // NOI18N

        btShowData.setText(bundle.getString("MarkupFinder.btShowData.text")); // NOI18N
        btShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btShowDataActionPerformed(evt);
            }
        });

        txtBeginMarkup.setColumns(20);
        txtBeginMarkup.setRows(5);
        txtBeginMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.txtBeginMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane3.setViewportView(txtBeginMarkup);

        txtEndMarkup.setColumns(20);
        txtEndMarkup.setRows(5);
        txtEndMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.txtEndMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane1.setViewportView(txtEndMarkup);

        javax.swing.GroupLayout panOutputLayout = new javax.swing.GroupLayout(panOutput);
        panOutput.setLayout(panOutputLayout);
        panOutputLayout.setHorizontalGroup(
            panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btShowData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFindMarkup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panOutputLayout.createSequentialGroup()
                        .addGroup(panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleBeginMarkup)
                            .addComponent(titleEndMarkup))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panOutputLayout.setVerticalGroup(
            panOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleBeginMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleEndMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btFindMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btShowData)
                .addContainerGap())
        );

        btAddToScript.setText(bundle.getString("MarkupFinder.btAddToScript.text")); // NOI18N
        btAddToScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddToScriptActionPerformed(evt);
            }
        });

        btCancel.setText(bundle.getString("MarkupFinder.btCancel.text")); // NOI18N
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btAddToScript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAddToScript)
                    .addComponent(btCancel))
                .addContainerGap())
        );

        split.setRightComponent(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewDataActionPerformed
        tabData.add(new DataSelector());
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_btNewDataActionPerformed

    private void btRemoveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveDataActionPerformed
        if (tabData.getTabCount() > 1) {
            tabData.remove(tabData.getSelectedIndex());
        }
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_btRemoveDataActionPerformed

    private void btFindMarkupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindMarkupActionPerformed
        Object[][] data = getDataAsArray();
        if (data != null) {
            String[] arrDoc = (String[]) data[0];
            String[] arrKey = (String[]) data[1];
            Integer[] arrOccu = (Integer[]) data[2];
                        
            try {
                String[] m = ToolMarkups.searchMinLenghtMarkup(arrDoc, arrKey, arrOccu);
                txtBeginMarkup.setText(m[0]);
                txtEndMarkup.setText(m[1]);
            } catch (MarkupToolException ex) {

                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                        "ch/arkeine/markupextractor/internationalization"); // NOI18N
                final String title = bundle.getString(
                        "MarkupFinder.message.testExtractedTitle");
                final String summary = bundle.getString(
                        "MarkupFinder.message.testExtractedSummary");
                ToolMessages.showBigMessage(this, summary, title, ex.getLocalizedMessage(), JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(ScriptEditorMenu.class.getName()).log(
                        Level.WARNING, null, ex);
            }
        }
    }//GEN-LAST:event_btFindMarkupActionPerformed

    private void btShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btShowDataActionPerformed
        Object[][] data = getDataAsArray();
        if (data != null) {
            String[] arrDoc = (String[]) data[0];
            Command command = new Command(Command.CommandName.COPY);
            command.setParameter1(txtBeginMarkup.getText());
            command.setParameter2(txtEndMarkup.getText());
            Extractor extractor = new Extractor(new Command[]{command}, arrDoc, false);

            ExtractionMenu dialog1 = new ExtractionMenu(null, true,extractor);
            dialog1.setLocationRelativeTo(this);
            dialog1.setVisible(true);

            DisplayDataExtracted dialog2 = new DisplayDataExtracted(null, true);
            dialog2.SetDataSource(extractor);
            dialog2.setLocationRelativeTo(this);
            dialog2.setVisible(true);
        }
    }//GEN-LAST:event_btShowDataActionPerformed

    private void btAddToScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddToScriptActionPerformed
        isOk = true;
        dispose();
    }//GEN-LAST:event_btAddToScriptActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddToScript;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btFindMarkup;
    private javax.swing.JButton btNewData;
    private javax.swing.JButton btRemoveData;
    private javax.swing.JButton btShowData;
    private ch.arkeine.markupextractor.userinterface.wizard.DataSelector dataSelector1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panInput;
    private javax.swing.JPanel panOutput;
    private javax.swing.JSplitPane split;
    private javax.swing.JTabbedPane tabData;
    private javax.swing.JLabel titleBeginMarkup;
    private javax.swing.JLabel titleEndMarkup;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtBeginMarkup;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtEndMarkup;
    // End of variables declaration//GEN-END:variables
}
