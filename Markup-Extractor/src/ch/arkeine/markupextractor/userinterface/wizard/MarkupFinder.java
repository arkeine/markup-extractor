/*
 * Copyright 2015 Nils Ryter.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ch.arkeine.markupextractor.userinterface.wizard;

import ch.arkeine.markupextractor.extractor.Command;
import ch.arkeine.markupextractor.extractor.Extractor;
import ch.arkeine.markupextractor.tool.MarkupToolException;
import ch.arkeine.markupextractor.tool.ToolMarkups;
import ch.arkeine.markupextractor.tool.ToolMessages;
import ch.arkeine.markupextractor.userinterface.DisplayDataExtracted;
import ch.arkeine.markupextractor.userinterface.ExtractionMenu;
import ch.arkeine.markupextractor.userinterface.ScriptEditorMenu;
import ch.arkeine.markupextractor.userinterface.SummaryMenu;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nils Ryter
 */
public class MarkupFinder extends javax.swing.JDialog {

    //OUTPUT
    private boolean isOk;

    /**
     * Creates new form MarkupFinder
     */
    public MarkupFinder(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        renameTab();
        enableRemoveButton();
        isOk = false;
    }

    private void renameTab() {
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                "ch/arkeine/markupextractor/internationalization"); // NOI18N

        for (int i = 0; i < tabbedPaneData.getTabCount(); i++) {
            tabbedPaneData.setTitleAt(i, bundle.getString(
                    "MarkupFinder.dataSelector.TabConstraints.tabTitle")
                    + " " + (i + 1));
        }
    }

    private void enableRemoveButton() {
        buttonRemoveData.setEnabled(tabbedPaneData.getTabCount() > 1);
    }

    public String[] getMarkups() {
        String[] markups = new String[2];
        markups[0] = textAreaBeginMarkup.getText();
        markups[1] = textAreaEndMarkup.getText();
        return markups;
    }

    public boolean isOk() {
        return isOk;
    }

    private Object[][] getDataAsArray() {
        String[] docs = new String[tabbedPaneData.getTabCount()];
        String[] keys = new String[tabbedPaneData.getTabCount()];
        Integer[] num = new Integer[tabbedPaneData.getTabCount()];

        int i = 0;
        for (Component c : tabbedPaneData.getComponents()) {
            DataSelector d = (DataSelector) c;
            docs[i] = d.getContent();
            keys[i] = d.getOccurenceText();
            num[i] = d.getOccurenceNumber();
            if (d.getOccurenceText().isEmpty()) {
                return null;
            }
            i++;
        }
        
        Object[][] o = new Object[3][tabbedPaneData.getTabCount()];
        o[0] = docs;
        o[1] = keys;
        o[2] = num;
        return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        split = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        tabbedPaneData = new javax.swing.JTabbedPane();
        dataSelector1 = new ch.arkeine.markupextractor.userinterface.wizard.DataSelector();
        jPanel1 = new javax.swing.JPanel();
        panelInput = new javax.swing.JPanel();
        buttonNewData = new javax.swing.JButton();
        buttonRemoveData = new javax.swing.JButton();
        panelOutput = new javax.swing.JPanel();
        buttonFindMarkup = new javax.swing.JButton();
        labelBeginMarkup = new javax.swing.JLabel();
        labelEndMarkup = new javax.swing.JLabel();
        buttonShowData = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaBeginMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaEndMarkup = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        buttonAddToScript = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ch/arkeine/markupextractor/internationalization"); // NOI18N
        setTitle(bundle.getString("MarkupFinder.title")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        split.setDividerLocation(500);
        split.setResizeWeight(0.8);

        tabbedPaneData.addTab(bundle.getString("MarkupFinder.dataSelector1.TabConstraints.tabTitle"), dataSelector1); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneData, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneData, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        split.setLeftComponent(jPanel2);

        panelInput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panelInput.border.title"))); // NOI18N

        buttonNewData.setText(bundle.getString("MarkupFinder.buttonNewData.text")); // NOI18N
        buttonNewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewDataActionPerformed(evt);
            }
        });

        buttonRemoveData.setText(bundle.getString("MarkupFinder.buttonRemoveData.text")); // NOI18N
        buttonRemoveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonNewData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonRemoveData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonNewData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRemoveData)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MarkupFinder.panelOutput.border.title"))); // NOI18N

        buttonFindMarkup.setText(bundle.getString("MarkupFinder.buttonFindMarkup.text")); // NOI18N
        buttonFindMarkup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindMarkupActionPerformed(evt);
            }
        });

        labelBeginMarkup.setText(bundle.getString("MarkupFinder.labelBeginMarkup.text")); // NOI18N

        labelEndMarkup.setText(bundle.getString("MarkupFinder.labelEndMarkup.text")); // NOI18N

        buttonShowData.setText(bundle.getString("MarkupFinder.buttonShowData.text")); // NOI18N
        buttonShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowDataActionPerformed(evt);
            }
        });

        textAreaBeginMarkup.setColumns(20);
        textAreaBeginMarkup.setRows(5);
        textAreaBeginMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.textAreaBeginMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane3.setViewportView(textAreaBeginMarkup);

        textAreaEndMarkup.setColumns(20);
        textAreaEndMarkup.setRows(5);
        textAreaEndMarkup.setSyntaxEditingStyle(bundle.getString("MarkupFinder.textAreaEndMarkup.syntaxEditingStyle")); // NOI18N
        jScrollPane1.setViewportView(textAreaEndMarkup);

        javax.swing.GroupLayout panelOutputLayout = new javax.swing.GroupLayout(panelOutput);
        panelOutput.setLayout(panelOutputLayout);
        panelOutputLayout.setHorizontalGroup(
            panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonShowData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonFindMarkup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelOutputLayout.createSequentialGroup()
                        .addGroup(panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBeginMarkup)
                            .addComponent(labelEndMarkup))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelOutputLayout.setVerticalGroup(
            panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelBeginMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelEndMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonFindMarkup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonShowData)
                .addContainerGap())
        );

        buttonAddToScript.setText(bundle.getString("MarkupFinder.buttonAddToScript.text")); // NOI18N
        buttonAddToScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddToScriptActionPerformed(evt);
            }
        });

        buttonCancel.setText(bundle.getString("MarkupFinder.buttonCancel.text")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonAddToScript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddToScript)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        split.setRightComponent(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonNewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewDataActionPerformed
        tabbedPaneData.add(new DataSelector());
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_buttonNewDataActionPerformed

    private void buttonRemoveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveDataActionPerformed
        if (tabbedPaneData.getTabCount() > 1) {
            tabbedPaneData.remove(tabbedPaneData.getSelectedIndex());
        }
        renameTab();
        enableRemoveButton();
    }//GEN-LAST:event_buttonRemoveDataActionPerformed

    private void buttonFindMarkupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindMarkupActionPerformed
        Object[][] data = getDataAsArray();
        if (data != null) {
            String[] arrDoc = (String[]) data[0];
            String[] arrKey = (String[]) data[1];
            Integer[] arrOccu = (Integer[]) data[2];
                        
            try {
                String[] m = ToolMarkups.searchMinLenghtMarkup(arrDoc, arrKey, arrOccu);
                textAreaBeginMarkup.setText(m[0]);
                textAreaEndMarkup.setText(m[1]);
            } catch (MarkupToolException ex) {

                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                        "ch/arkeine/markupextractor/internationalization"); // NOI18N
                final String title = bundle.getString(
                        "MarkupFinder.message.testExtractedTitle");
                final String summary = bundle.getString(
                        "MarkupFinder.message.testExtractedSummary");
                ToolMessages.showBigMessage(this, summary, title, ex.getLocalizedMessage(), JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(ScriptEditorMenu.class.getName()).log(
                        Level.WARNING, null, ex);
            }
        }
    }//GEN-LAST:event_buttonFindMarkupActionPerformed

    private void buttonShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowDataActionPerformed
        Object[][] data = getDataAsArray();
        if (data != null) {
            String[] arrDoc = (String[]) data[0];
            Command command = new Command(Command.CommandName.COPY);
            command.setParameter1(textAreaBeginMarkup.getText());
            command.setParameter2(textAreaEndMarkup.getText());
            Extractor extractor = new Extractor(new Command[]{command}, arrDoc, false);

            ExtractionMenu dialog1 = new ExtractionMenu(null, true,extractor);
            dialog1.setLocationRelativeTo(this);
            dialog1.setVisible(true);

            DisplayDataExtracted dialog2 = new DisplayDataExtracted(null, true);
            dialog2.SetDataSource(extractor);
            dialog2.setLocationRelativeTo(this);
            dialog2.setVisible(true);
        }
    }//GEN-LAST:event_buttonShowDataActionPerformed

    private void buttonAddToScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddToScriptActionPerformed
        isOk = true;
        dispose();
    }//GEN-LAST:event_buttonAddToScriptActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddToScript;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonFindMarkup;
    private javax.swing.JButton buttonNewData;
    private javax.swing.JButton buttonRemoveData;
    private javax.swing.JButton buttonShowData;
    private ch.arkeine.markupextractor.userinterface.wizard.DataSelector dataSelector1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelBeginMarkup;
    private javax.swing.JLabel labelEndMarkup;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelOutput;
    private javax.swing.JSplitPane split;
    private javax.swing.JTabbedPane tabbedPaneData;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textAreaBeginMarkup;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textAreaEndMarkup;
    // End of variables declaration//GEN-END:variables
}
